/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 22 19:28:57 GMT 2022
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringReader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.CharacterReader;
import org.jsoup.parser.ParseError;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ParseError_ESTest extends ParseError_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParseError parseError0 = new ParseError((-1), "");
      String string0 = parseError0.getCursorPos();
      assertEquals((-1), parseError0.getPosition());
      assertEquals("-1", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      ParseError parseError0 = new ParseError(characterReader0, "");
      String string0 = parseError0.toString();
      assertEquals("<1:1>: ", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      ParseError parseError0 = new ParseError(39, "9c[D87@^HQ/", objectArray0);
      assertEquals("39", parseError0.getCursorPos());
      assertEquals(39, parseError0.getPosition());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 0);
      ParseError parseError0 = new ParseError(characterReader0, "");
      String string0 = parseError0.getErrorMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StringReader stringReader0 = new StringReader("7Zudb%vj3%|fXz0ULk");
      CharacterReader characterReader0 = new CharacterReader(stringReader0, 1202);
      Object[] objectArray0 = new Object[2];
      ParseError parseError0 = new ParseError(characterReader0, "PV+", objectArray0);
      assertEquals("1:1", parseError0.getCursorPos());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ParseError parseError0 = new ParseError((-1), "");
      int int0 = parseError0.getPosition();
      assertEquals("-1", parseError0.getCursorPos());
      assertEquals((-1), int0);
  }
}
