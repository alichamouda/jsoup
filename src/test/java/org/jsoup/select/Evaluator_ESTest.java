/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 22 20:26:27 GMT 2022
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedReader;
import java.io.Reader;
import java.io.StringReader;
import java.net.URL;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.TreeSet;
import java.util.concurrent.SynchronousQueue;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import org.eclipse.jetty.io.LeakTrackingByteBufferPool;
import org.eclipse.jetty.io.MappedByteBufferPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.jsoup.Connection;
import org.jsoup.helper.Consumer;
import org.jsoup.helper.HttpConnection;
import org.jsoup.nodes.Attributes;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.DataNode;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.nodes.FormElement;
import org.jsoup.nodes.Node;
import org.jsoup.nodes.PseudoTextElement;
import org.jsoup.parser.ParseSettings;
import org.jsoup.parser.Parser;
import org.jsoup.parser.Tag;
import org.jsoup.select.Collector;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Evaluator;
import org.jsoup.select.NodeVisitor;
import org.jsoup.select.StructuralEvaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Evaluator_ESTest extends Evaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("'UcH>-U", "'UcH>-U");
      evaluator_AttributeWithValueEnding0.value = "'UcH>-U";
      evaluator_AttributeWithValueEnding0.value = "'UcH>-U";
      evaluator_AttributeWithValueEnding0.toString();
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(2, 2);
      evaluator_IsNthLastOfType0.toString();
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      evaluator_MatchText0.toString();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[4];
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("rW[", "[B%6znut<[*x2");
      evaluatorArray0[0] = (Evaluator) evaluator_AttributeWithValue0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or();
      evaluatorArray0[1] = (Evaluator) combiningEvaluator_Or0;
      Document document0 = new Document("[B%6znut<[*x2");
      evaluatorArray0[1].matches(document0, document0);
      Evaluator.AttributeWithValue evaluator_AttributeWithValue1 = null;
      try {
        evaluator_AttributeWithValue1 = new Evaluator.AttributeWithValue("rW[", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(0, 0);
      Document document0 = Document.createShell("[%s~=%s]");
      document0.getElementsMatchingOwnText("[%s~=%s]");
      Document document1 = document0.ownerDocument();
      Element element0 = document1.head();
      Element element1 = element0.clearAttributes();
      NodeVisitor nodeVisitor0 = mock(NodeVisitor.class, new ViolatedAssumptionAnswer());
      Element element2 = element1.traverse(nodeVisitor0);
      element2.val("@qu{Z)\"?Ic>M");
      evaluator_IsNthChild0.calculatePosition(element2, element2);
      evaluator_IsNthChild0.toString();
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_IsNthChild0);
      Pattern pattern0 = Pattern.compile("org.jsoup.select.Evaluator$IsLastChild", 0);
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      // Undeclared exception!
      try { 
        element0.getElementsContainingText((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.internal.StringUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("L]fi*:$|/+Ihdm^", "5]7jA%f 7y\"");
      Pattern pattern0 = Pattern.compile("L]fi*:$|/+Ihdm^", 72);
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      Tag tag0 = Tag.valueOf("shutdownOutput: {} oshut={}, ishut={}");
      Element element0 = new Element(tag0, "shutdownOutput: {} oshut={}, ishut={}");
      Element element1 = element0.val("");
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Element element2 = element1.forEachNode(consumer0);
      Element element3 = element2.removeAttr("5]7jA%f 7y\"");
      Element element4 = element3.html("L]fi*:$|/+Ihdm^");
      evaluator_MatchesOwn0.matches(element4, element2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      String string0 = "[%s*=%s]";
      ParseSettings parseSettings0 = ParseSettings.htmlDefault;
      Tag tag0 = Tag.valueOf("[%s*=%s]", parseSettings0);
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      String string1 = "`M,Xq1*1s&F'";
      Attributes attributes2 = attributes1.put("EUJ9.(*&Cr=HeO@", "`M,Xq1*1s&F'");
      Element element0 = new Element(tag0, "EUJ9.(*&Cr=HeO@", attributes2);
      evaluator_IsRoot0.matches(element0, element0);
      Parser.xmlParser();
      PipedReader pipedReader0 = null;
      try {
        pipedReader0 = new PipedReader((-1825));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe size <= 0
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Parser parser0 = Parser.xmlParser();
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("SelectorProducer", parseSettings0);
      Attributes attributes0 = new Attributes();
      FormElement formElement0 = new FormElement(tag0, "D8TFvQ?_\"X)$P", attributes0);
      Document document0 = Document.createShell("D8TFvQ?_\"X)$P");
      FormElement formElement1 = formElement0.addElement(document0);
      FormElement formElement2 = formElement1.clone();
      Element element0 = formElement2.root();
      Element element1 = element0.attr("uDs?", true);
      evaluator_IsFirstChild0.matches(element1, document0);
      String string0 = "H\"1W*VCg";
      Document document1 = parser0.parseInput("SelectorProducer", "H\"1W*VCg");
      document1.getElementsContainingText("H\"1W*VCg");
      evaluator_IsFirstChild0.matches(document1, document1);
      String string1 = "org.jsoup.select.Evaluator$MatchesOwn";
      Parser.parseXmlFragment("org.jsoup.select.Evaluator$MatchesOwn", "SelectorProducer");
      int int0 = 0;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      parser0.setTrackErrors(0);
      PriorityQueue<Evaluator> priorityQueue0 = null;
      try {
        priorityQueue0 = new PriorityQueue<Evaluator>(0, comparator0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PriorityQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or();
      combiningEvaluator_Or0.toString();
      combiningEvaluator_Or0.add((Evaluator) null);
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("");
      evaluator_ContainsOwnText0.toString();
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("W<DQ@5$5AP)yc&ZB2Uw");
      Tag tag0 = Tag.valueOf("W<DQ@5$5AP)yc&ZB2Uw");
      Element element0 = new Element(tag0, "");
      Tag tag1 = element0.tag();
      CDataNode cDataNode0 = new CDataNode(":containsOwn()");
      Attributes attributes0 = cDataNode0.attributes();
      FormElement formElement0 = new FormElement(tag1, ";I2'lo*OF+@uV2KW d", attributes0);
      FormElement formElement1 = formElement0.addElement(element0);
      evaluator_AttributeStarting0.matches(formElement1, element0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(1);
      Document document0 = Parser.parseBodyFragment("", "");
      Document document1 = document0.clone();
      Element element0 = document1.addClass("");
      evaluator_IndexEquals0.matches(element0, document1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("WqL{8X2;50[", "WqL{8X2;50[");
      Collector.FirstFinder collector_FirstFinder0 = new Collector.FirstFinder(evaluator_AttributeWithValueNot0);
      Document document0 = Parser.parseBodyFragment("WqL{8X2;50[", "#oeO]R$ C2");
      Parser parser0 = Parser.htmlParser();
      Document document1 = document0.parser(parser0);
      Element element0 = collector_FirstFinder0.find(document1, document1);
      element0.getElementsByIndexLessThan(0);
      NodeVisitor nodeVisitor0 = mock(NodeVisitor.class, new ViolatedAssumptionAnswer());
      evaluator_AttributeWithValueNot0.matches(element0, element0);
      Element element1 = element0.traverse(nodeVisitor0);
      evaluator_AttributeWithValueNot0.matches(element1, element1);
      evaluator_AttributeWithValueNot0.value = "WqL{8X2;50[";
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_AttributeWithValueNot0);
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("X6Z!6{s_%-z]O");
      evaluator_Tag0.toString();
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("Read timeout");
      evaluator_Attribute0.matches(element0, element0);
      Evaluator.ContainsWholeText evaluator_ContainsWholeText0 = new Evaluator.ContainsWholeText("v`b^{Bd*");
      evaluator_ContainsWholeText0.matches(element0, document0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("STARTED @{}ms {}", 2171);
      Evaluator.MatchesWholeText evaluator_MatchesWholeText0 = new Evaluator.MatchesWholeText(pattern0);
      // Undeclared exception!
      try { 
        evaluator_MatchesWholeText0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesWholeText", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("org.jsoup.select.Evaluator$CssNthEvaluator");
      Document document0 = Document.createShell("org.jsoup.select.Evaluator$CssNthEvaluator");
      document0.getElementsByClass("org.jsoup.select.Evaluator$CssNthEvaluator");
      evaluator_ContainsData0.matches(document0, document0);
      // Undeclared exception!
      try { 
        document0.is("A1R+");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.select.QueryParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText(":matchesWholeText(%s)");
      Evaluator.Id evaluator_Id0 = new Evaluator.Id(":containsWholeOwnText(%s)");
      evaluator_Id0.toString();
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute(":matchesWholeText(%s)");
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader(":matchesWholeText(%s)");
      Document document0 = parser0.parseInput((Reader) stringReader0, "WatchKey not recognized: {}");
      Tag tag0 = document0.tag();
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.clone();
      tag0.normalName();
      Attributes attributes2 = attributes1.put(":containsWholeOwnText(%s)", true);
      Element element0 = new Element(tag0, "#:containsWholeOwnText(%s)", attributes2);
      evaluator_Attribute0.matches(element0, document0);
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("#:containsWholeOwnText(%s)");
      evaluator_Tag0.toString();
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      evaluator_Id0.toString();
      evaluator_MatchText0.toString();
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(evaluator_MatchText0);
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(structuralEvaluator_ImmediateParent0);
      Element element1 = element0.wrap("WatchKey not recognized: {}");
      structuralEvaluator_Parent0.matches(element0, element1);
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(12, (-534));
      evaluator_IsNthChild0.getPseudoClass();
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      evaluator_AllElements0.toString();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      String string0 = "+- ";
      Tag tag0 = Tag.valueOf("+- ");
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "+- ", attributes0);
      Element element1 = new Element("+- ");
      Element element2 = element0.appendTo(element1);
      Element element3 = element2.wrap("4F0nL$sK?(nb");
      Element element4 = element3.toggleClass("+- ");
      Element element5 = element4.after("+- ");
      element5.nextElementSiblings();
      Element element6 = null;
      // Undeclared exception!
      try { 
        evaluator_IndexGreaterThan0.matches(element5, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$IndexGreaterThan", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", (-2109));
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      pattern0.split((CharSequence) "", 0);
      evaluator_MatchesOwn0.toString();
      String string0 = "@s";
      Pattern.compile("@s");
      Element element0 = null;
      // Undeclared exception!
      try { 
        evaluator_MatchesOwn0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesOwn", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-2733), (-2733));
      evaluator_IsNthLastChild0.getPseudoClass();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthLastChild0);
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("nth-last-child", "|37*J,X=(m4,_>sFuZy");
      Element element0 = document0.removeAttr("|37*J,X=(m4,_>sFuZy");
      element0.textNodes();
      Element element1 = element0.lastElementSibling();
      SynchronousQueue<DataNode> synchronousQueue0 = new SynchronousQueue<DataNode>();
      element0.getElementsContainingOwnText("nth-last-child");
      // Undeclared exception!
      try { 
        element1.insertChildren(3, (Collection<? extends Node>) synchronousQueue0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Insert position out of bounds.
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("");
      Document document0 = new Document("Dk*x+3");
      Element element0 = document0.prependText("script");
      evaluator_ContainsOwnText0.matches(element0, document0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("");
      Tag tag0 = Tag.valueOf("meta[name=charset]");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("meta[name=charset]", "IN{K=*ru ");
      PseudoTextElement pseudoTextElement0 = new PseudoTextElement(tag0, "w+a[eOPYxe*=vN^\"G7", attributes1);
      Element element0 = pseudoTextElement0.prepend("");
      evaluator_Id0.matches(element0, element0);
      evaluator_Id0.toString();
      evaluator_Id0.toString();
      evaluator_Id0.toString();
      evaluator_Id0.toString();
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith(";f4(^}Zi6Dg7h0LQ<<c");
      evaluator_TagEndsWith0.toString();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Tag tag0 = Tag.valueOf("9kGPj5zB<wpUL");
      Attributes attributes0 = new Attributes();
      Attributes attributes1 = attributes0.put("sp Z|ytr=", "sp Z|ytr=");
      FormElement formElement0 = new FormElement(tag0, "sp Z|ytr=", attributes1);
      FormElement formElement1 = formElement0.clone();
      evaluator_IsFirstOfType0.calculatePosition(formElement1, formElement0);
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData((String) null);
      evaluator_ContainsData0.matches(formElement1, formElement0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("");
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-378));
      Document document0 = Parser.parse("^c^%YUuia*EIY", "^c^%YUuia*EIY");
      Collector.FirstFinder collector_FirstFinder0 = new Collector.FirstFinder(evaluator_ContainsData0);
      document0.filter(collector_FirstFinder0);
      document0.nextElementSibling();
      // Undeclared exception!
      try { 
        evaluator_IndexGreaterThan0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$IndexGreaterThan", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-1408), 0);
      Document document0 = Document.createShell("");
      Element element0 = document0.addClass("");
      evaluator_IsNthChild0.calculatePosition(element0, element0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      evaluator_IsOnlyChild0.matches(document0, element0);
      evaluator_IsOnlyChild0.matches(document0, document0);
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(807);
      evaluator_IndexLessThan0.index = 807;
      evaluator_IndexLessThan0.toString();
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsNthChild0);
      HttpConnection httpConnection0 = new HttpConnection();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      Connection connection0 = httpConnection0.data((Map<String, String>) hashMap0);
      Document document1 = document0.connection(connection0);
      structuralEvaluator_PreviousSibling0.matches(element0, document1);
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_IsNthChild0);
      structuralEvaluator_ImmediatePreviousSibling0.matches(document0, document1);
      Pattern pattern0 = Pattern.compile("Content-Type", 807);
      element0.getElementsMatchingText(pattern0);
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("+> ");
      evaluator_ContainsData0.toString();
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = null;
      try {
        evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("org.jsoup.select.Evaluator$TagEndsWith", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches((Pattern) null);
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_Matches0);
      Element element0 = null;
      // Undeclared exception!
      try { 
        evaluator_Matches0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Matches", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      evaluator_AllElements0.toString();
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      Document document0 = Document.createShell("*");
      Element element0 = document0.body();
      Element element1 = element0.clone();
      Element element2 = element1.attr("org.eclipse.jetty.util.SharedBlockingCallback$BlockerTimeoutException", true);
      evaluator_IsLastOfType0.calculatePosition(element2, element0);
      evaluator_IsLastOfType0.toString();
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = null;
      try {
        evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id((String) null);
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Parser parser0 = Parser.htmlParser();
      Document document0 = parser0.parseInput("", "MAm4Je%_MR9ayE)");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.limitedQuirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      Document document2 = document1.clone();
      Element element0 = document2.empty();
      evaluator_IsFirstChild0.matches(element0, document2);
      // Undeclared exception!
      try { 
        Document.createShell((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      Element element0 = null;
      // Undeclared exception!
      try { 
        evaluator_IsFirstChild0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$IsFirstChild", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("dUNJ\"%/Xt5\u0003c-= 9h");
      evaluator_ContainsData0.toString();
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(20, 20);
      HttpConnection httpConnection0 = new HttpConnection();
      // Undeclared exception!
      try { 
        httpConnection0.post();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URL not set. Make sure to call #url(...) before executing the request.
         //
         verifyException("org.jsoup.helper.HttpConnection$Base", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute("J>-O");
      evaluator_Attribute0.toString();
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      Document document0 = Document.createShell("J>-O");
      Element element0 = document0.shallowClone();
      Tag tag0 = element0.tag();
      FormElement formElement0 = new FormElement(tag0, (String) null, (Attributes) null);
      evaluator_IsOnlyOfType0.matches(formElement0, document0);
      Document document1 = new Document("H9+pd9SLa5Yy:&bAZ");
      evaluator_IsOnlyOfType0.matches(document1, document1);
      Element element1 = document1.body();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      Element element2 = element1.forEachNode(consumer0);
      evaluator_IsOnlyOfType0.matches(element2, element2);
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(9, 3338);
      evaluator_IsNthLastOfType0.getPseudoClass();
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      evaluator_MatchText0.toString();
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("[J>-O]");
      evaluator_ContainsText0.toString();
      // Undeclared exception!
      try { 
        evaluator_ContainsText0.matches(element1, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$ContainsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType((-6007), 23);
      Document document0 = new Document("$PAk#hd");
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.noQuirks;
      Document document1 = document0.quirksMode(document_QuirksMode0);
      URL uRL0 = MockURL.getFileExample();
      URL uRL1 = MockURL.URL(uRL0, "ai/&");
      Connection connection0 = HttpConnection.connect(uRL1);
      Document document2 = document1.connection(connection0);
      Element element0 = document2.root();
      PriorityQueue<DataNode> priorityQueue0 = new PriorityQueue<DataNode>();
      Element element1 = element0.appendChildren(priorityQueue0);
      evaluator_IsNthLastOfType0.calculatePosition(element1, document1);
      evaluator_IsNthLastOfType0.toString();
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn((Pattern) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(277);
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(21, 277);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthLastOfType0);
      Collector.FirstFinder collector_FirstFinder0 = structuralEvaluator_Has0.finder;
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("Low configured threads: (max={} - required={})={} < warnAt={} for {}");
      Document document0 = parser0.parseInput((Reader) stringReader0, "E]?gDZq+ox(");
      Document document1 = document0.shallowClone();
      document1.getElementsByAttributeStarting("Low configured threads: (max={} - required={})={} < warnAt={} for {}");
      collector_FirstFinder0.find(document1, document0);
      // Undeclared exception!
      try { 
        evaluator_IsNthLastOfType0.calculatePosition((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$IsNthLastOfType", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute((String) null);
      evaluator_Attribute0.toString();
      evaluator_Attribute0.toString();
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("[null]");
      evaluator_Tag0.toString();
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      HttpConnection httpConnection0 = new HttpConnection();
      // Undeclared exception!
      try { 
        httpConnection0.post();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URL not set. Make sure to call #url(...) before executing the request.
         //
         verifyException("org.jsoup.helper.HttpConnection$Base", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = "{} lost race {}";
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("{} lost race {}", "5m&E$Jc|{_`p5qd");
      evaluator_AttributeWithValueContaining0.toString();
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_AttributeWithValueContaining0);
      structuralEvaluator_PreviousSibling0.evaluator = (Evaluator) evaluator_AttributeWithValueContaining0;
      structuralEvaluator_PreviousSibling0.evaluator = (Evaluator) evaluator_AttributeWithValueContaining0;
      structuralEvaluator_PreviousSibling0.toString();
      // Undeclared exception!
      try { 
        Pattern.compile((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      Document document0 = Document.createShell(".3~$4bYv");
      Document document1 = document0.normalise();
      evaluator_IsOnlyOfType0.matches(document1, document1);
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_IsOnlyOfType0);
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("5&%QU IG)C]m2", "org.jsoup.select.Evaluator$ContainsOwnText");
      evaluator_AttributeWithValueEnding0.toString();
      evaluator_AttributeWithValueEnding0.matches(document0, document1);
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("|wYIMdl");
      evaluator_ContainsOwnText0.toString();
      evaluator_ContainsOwnText0.toString();
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting(":containsOwn(|wyimdl)");
      evaluator_AttributeStarting0.matches(document0, document0);
      evaluator_AttributeStarting0.matches(document0, document1);
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(124, 124);
      evaluator_IsNthLastOfType0.getPseudoClass();
      evaluator_IsOnlyOfType0.matches(document1, document0);
      Pattern pattern0 = Pattern.compile("|wYIMdl");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      evaluator_Matches0.toString();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("9^ORT3W:*iQNLk#");
      Evaluator.MatchesWholeText evaluator_MatchesWholeText0 = new Evaluator.MatchesWholeText(pattern0);
      evaluator_MatchesWholeText0.toString();
      evaluator_MatchesWholeText0.toString();
      evaluator_MatchesWholeText0.toString();
      evaluator_MatchesWholeText0.toString();
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("_{");
      evaluator_Id0.toString();
      evaluator_Id0.toString();
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      Document document0 = Parser.parse("_FzkCe=", ":matchesWholeText(9^ORT3W:*iQNLk#)");
      Element element0 = document0.id("");
      evaluator_IsLastChild0.matches(element0, document0);
      evaluator_IsLastChild0.toString();
      String string0 = "";
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = null;
      try {
        evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      Element element0 = new Element("o;d*6l+VtMrktm");
      evaluator_IsEmpty0.matches(element0, element0);
      evaluator_IsEmpty0.toString();
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      evaluator_IsFirstOfType0.toString();
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      evaluator_IsLastOfType0.getPseudoClass();
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      evaluator_IsOnlyChild0.matches(element0, element0);
      evaluator_IsOnlyChild0.toString();
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("o;d*6l+VtMrktm");
      evaluator_ContainsData0.matches(element0, element0);
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      evaluator_MatchText0.matches(element0, element0);
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      evaluator_IsRoot0.toString();
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("base");
      evaluator_Id0.toString();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(0, 0);
      HttpConnection httpConnection0 = new HttpConnection();
      evaluator_IsNthLastChild0.toString();
      // Undeclared exception!
      try { 
        httpConnection0.post();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URL not set. Make sure to call #url(...) before executing the request.
         //
         verifyException("org.jsoup.helper.HttpConnection$Base", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      evaluator_IsLastChild0.toString();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      int int0 = 0;
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan(0);
      Pattern pattern0 = Pattern.compile("'");
      Evaluator.MatchesWholeText evaluator_MatchesWholeText0 = new Evaluator.MatchesWholeText(pattern0);
      String string0 = "Q]";
      Document document0 = new Document("Q]");
      String string1 = "summary";
      evaluator_MatchesWholeText0.toString();
      Element element0 = document0.text("summary");
      String string2 = "nth-child";
      // Undeclared exception!
      try { 
        element0.getElementsByAttributeValueNot("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Evaluator.MatchesWholeText evaluator_MatchesWholeText0 = new Evaluator.MatchesWholeText((Pattern) null);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan((-438));
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_IndexGreaterThan0);
      structuralEvaluator_Parent0.toString();
      Document document0 = Parser.parse("", "");
      structuralEvaluator_Parent0.toString();
      Element element0 = document0.selectFirst((Evaluator) structuralEvaluator_Parent0);
      Element element1 = document0.empty();
      element1.tagName("R=O,oR,1>0KROd");
      structuralEvaluator_Parent0.matches(document0, element1);
      Evaluator.ContainsWholeOwnText evaluator_ContainsWholeOwnText0 = new Evaluator.ContainsWholeOwnText("{De+8fXzNLjCa");
      evaluator_ContainsWholeOwnText0.matches(element1, document0);
      evaluator_IndexGreaterThan0.matches(element0, element0);
      evaluator_ContainsWholeOwnText0.matches(document0, document0);
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      structuralEvaluator_Root0.matches(element1, document0);
      evaluator_IndexGreaterThan0.toString();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IndexGreaterThan0);
      structuralEvaluator_Has0.toString();
      StructuralEvaluator.ImmediateParent structuralEvaluator_ImmediateParent0 = new StructuralEvaluator.ImmediateParent(structuralEvaluator_Has0);
      structuralEvaluator_ImmediateParent0.toString();
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = null;
      try {
        evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("{De+8fXzNLjCa", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Pattern pattern0 = Pattern.compile(":containsData(%s)", 0);
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("", pattern0);
      // Undeclared exception!
      try { 
        Tag.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild((-35), 0);
      Pattern pattern0 = Pattern.compile("", (-35));
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("", pattern0);
      evaluator_AttributeWithValueMatching0.toString();
      Evaluator.ContainsWholeText evaluator_ContainsWholeText0 = new Evaluator.ContainsWholeText("[~=]");
      Document document0 = Parser.parse(">Y3',;#", ":matchText");
      Document document1 = document0.clone();
      evaluator_ContainsWholeText0.matches(document1, document1);
      Evaluator[] evaluatorArray0 = new Evaluator[7];
      evaluatorArray0[0] = (Evaluator) evaluator_ContainsWholeText0;
      evaluatorArray0[1] = (Evaluator) evaluator_ContainsWholeText0;
      evaluatorArray0[2] = (Evaluator) evaluator_IsNthLastChild0;
      evaluatorArray0[3] = (Evaluator) evaluator_IsNthLastChild0;
      evaluatorArray0[4] = (Evaluator) evaluator_AttributeWithValueMatching0;
      evaluatorArray0[5] = (Evaluator) evaluator_AttributeWithValueMatching0;
      evaluatorArray0[6] = (Evaluator) evaluator_AttributeWithValueMatching0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      combiningEvaluator_And0.toString();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(0, 2655);
      evaluator_IsNthChild0.getPseudoClass();
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      evaluator_IsNthChild0.getPseudoClass();
      Evaluator.AttributeWithValueMatching evaluator_AttributeWithValueMatching0 = new Evaluator.AttributeWithValueMatching("nth-child", (Pattern) null);
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("yC", parseSettings0);
      Element element0 = new Element(tag0, "HtZl$Mz<$9v^7L!BPf7");
      element0.getElementById("nth-child");
      evaluator_AttributeWithValueMatching0.matches((Element) null, element0);
      Evaluator[] evaluatorArray0 = new Evaluator[3];
      evaluatorArray0[0] = (Evaluator) evaluator_IsNthChild0;
      evaluatorArray0[1] = (Evaluator) evaluator_IsEmpty0;
      evaluatorArray0[2] = (Evaluator) evaluator_IsNthChild0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      combiningEvaluator_Or0.matches(element0, element0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = "5M+";
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("5M+");
      evaluator_ContainsOwnText0.toString();
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(0);
      // Undeclared exception!
      try { 
        evaluator_IndexGreaterThan0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$IndexGreaterThan", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Evaluator.ContainsWholeText evaluator_ContainsWholeText0 = new Evaluator.ContainsWholeText("java.lang.module.ResolvedModule");
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_ContainsWholeText0);
      Collector.FirstFinder collector_FirstFinder0 = structuralEvaluator_Has0.finder;
      Document document0 = Parser.parse("", "java.lang.module.ResolvedModule");
      collector_FirstFinder0.find(document0, document0);
      evaluator_ContainsWholeText0.matches((Element) null, document0);
      evaluator_ContainsWholeText0.toString();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("\n * ");
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("\n * ", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "ukkbi!jw7>%(h)K", attributes0);
      Element element1 = element0.prependElement("n:-s#4RzGsv@/'");
      Tag.valueOf(":matchesOwn(%s)");
      Element element2 = element1.append("\n * ");
      Element element3 = element2.prepend("ukkbi!jw7>%(h)K");
      evaluator_ContainsText0.matches(element3, element2);
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("n:-s#4RzGsv@/'");
      evaluator_Class0.matches(element2, element2);
      evaluator_Class0.matches(element2, element2);
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(2);
      evaluator_IndexGreaterThan0.toString();
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("ukkbi!jw7>%(h)K", "\n * ");
      evaluator_AttributeWithValue0.matches(element1, element2);
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(0, 2475);
      evaluator_IsNthOfType0.matches(element2, element3);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[2];
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText("");
      evaluatorArray0[0] = (Evaluator) evaluator_ContainsText0;
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(2945);
      evaluatorArray0[1] = (Evaluator) evaluator_IndexEquals0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(combiningEvaluator_Or0);
      Document document0 = Document.createShell("zZ;0OI)WeVS8");
      Document document1 = document0.normalise();
      Document.QuirksMode document_QuirksMode0 = Document.QuirksMode.quirks;
      Document document2 = document1.quirksMode(document_QuirksMode0);
      Document document3 = document2.shallowClone();
      Element element0 = document3.append("");
      evaluatorArray0[0].matches(document0, document1);
      Document document4 = document3.clone();
      structuralEvaluator_Has0.matches(document4, document3);
      evaluator_IndexEquals0.toString();
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("2Fe  ", "2Fe  ");
      evaluator_AttributeWithValueStarting0.matches(document0, element0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsFirstOfType0);
      structuralEvaluator_Has0.toString();
      Evaluator.ContainsText evaluator_ContainsText0 = new Evaluator.ContainsText(":has(:first-of-type)");
      HttpConnection httpConnection0 = new HttpConnection();
      // Undeclared exception!
      try { 
        httpConnection0.post();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URL not set. Make sure to call #url(...) before executing the request.
         //
         verifyException("org.jsoup.helper.HttpConnection$Base", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Document document0 = Parser.parse("org.jsoup.select.Evaluator$IsNthChild", "org.jsoup.select.Evaluator$IsNthChild");
      Element element0 = document0.root();
      evaluator_IsFirstOfType0.matches(element0, element0);
      Document document1 = document0.normalise();
      evaluator_IsFirstOfType0.calculatePosition(element0, document1);
      Element element1 = document0.html("org.jsoup.select.Evaluator$IsNthChild");
      evaluator_IsFirstOfType0.calculatePosition(document0, document0);
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsFirstOfType0);
      structuralEvaluator_PreviousSibling0.evaluator = (Evaluator) evaluator_IsFirstOfType0;
      structuralEvaluator_PreviousSibling0.toString();
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue(":first-of-type ~ ", "asK&i4M&X\"5%MB!)K");
      evaluator_AttributeWithValue0.matches(element1, element1);
      Evaluator.ContainsWholeOwnText evaluator_ContainsWholeOwnText0 = new Evaluator.ContainsWholeOwnText("org.jsoup.select.Evaluator$IsNthChild");
      evaluator_ContainsWholeOwnText0.matches(document0, document0);
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute(":first-of-type ~ ");
      evaluator_Attribute0.toString();
      evaluator_IsFirstOfType0.toString();
      // Undeclared exception!
      try { 
        Pattern.compile("asK&i4M&X\"5%MB!)K");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unmatched closing ')' near index 14
         // asK&i4M&X\"5%MB!)K
         //               ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 0);
      Evaluator.MatchesOwn evaluator_MatchesOwn0 = new Evaluator.MatchesOwn(pattern0);
      ParseSettings parseSettings0 = new ParseSettings(true, true);
      // Undeclared exception!
      try { 
        Tag.valueOf((String) null, parseSettings0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan((-2465));
      evaluator_IndexLessThan0.toString();
      evaluator_IndexLessThan0.index = (-2465);
      evaluator_IndexLessThan0.index = (-2465);
      evaluator_IndexLessThan0.index = (-545);
      evaluator_IndexLessThan0.index = 0;
      evaluator_IndexLessThan0.matches((Element) null, (Element) null);
      Evaluator.Id evaluator_Id0 = new Evaluator.Id(":lt(-2465)");
      evaluator_Id0.toString();
      evaluator_Id0.toString();
      Evaluator[] evaluatorArray0 = new Evaluator[7];
      evaluatorArray0[0] = (Evaluator) evaluator_Id0;
      evaluatorArray0[1] = (Evaluator) evaluator_Id0;
      evaluatorArray0[2] = (Evaluator) evaluator_Id0;
      evaluatorArray0[3] = (Evaluator) evaluator_IndexLessThan0;
      evaluatorArray0[4] = (Evaluator) evaluator_IndexLessThan0;
      evaluatorArray0[5] = (Evaluator) evaluator_IndexLessThan0;
      evaluatorArray0[6] = (Evaluator) evaluator_Id0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      // Undeclared exception!
      try { 
        combiningEvaluator_Or0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$Id", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or();
      Evaluator.ContainsOwnText evaluator_ContainsOwnText0 = new Evaluator.ContainsOwnText("");
      combiningEvaluator_Or0.add(evaluator_ContainsOwnText0);
      Evaluator.IsFirstChild evaluator_IsFirstChild0 = new Evaluator.IsFirstChild();
      evaluator_IsFirstChild0.toString();
      Evaluator.IsNthOfType evaluator_IsNthOfType0 = new Evaluator.IsNthOfType(2629, 0);
      evaluator_IsNthOfType0.getPseudoClass();
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(0, (-967));
      Evaluator.MatchText evaluator_MatchText0 = new Evaluator.MatchText();
      evaluator_MatchText0.toString();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Evaluator.IsLastOfType evaluator_IsLastOfType0 = new Evaluator.IsLastOfType();
      evaluator_IsLastOfType0.getPseudoClass();
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = null;
      try {
        evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("nth-last-of-type", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(277);
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType(21, 277);
      StructuralEvaluator.Has structuralEvaluator_Has0 = new StructuralEvaluator.Has(evaluator_IsNthLastOfType0);
      Collector.FirstFinder collector_FirstFinder0 = structuralEvaluator_Has0.finder;
      Parser.xmlParser();
      evaluator_IsNthLastOfType0.toString();
      evaluator_IsNthLastOfType0.toString();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("");
      evaluator_Id0.toString();
      Evaluator.Class evaluator_Class0 = new Evaluator.Class("");
      evaluator_Class0.toString();
      evaluator_Class0.toString();
      evaluator_Class0.toString();
      evaluator_Class0.toString();
      Evaluator.AttributeWithValue evaluator_AttributeWithValue0 = new Evaluator.AttributeWithValue("#", "`oy<|*=4qr");
      evaluator_AttributeWithValue0.toString();
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("`oy<|*=4qr", "#");
      StructuralEvaluator.Not structuralEvaluator_Not0 = new StructuralEvaluator.Not(evaluator_Id0);
      structuralEvaluator_Not0.toString();
      Evaluator.ContainsWholeOwnText evaluator_ContainsWholeOwnText0 = new Evaluator.ContainsWholeOwnText("ds:gB!fIWX=1+");
      Parser parser0 = Parser.xmlParser();
      StringReader stringReader0 = new StringReader("=zmtj2Nvy=h");
      Document document0 = parser0.parseInput((Reader) stringReader0, "$0d:VW`7(@B!&w");
      Element element0 = document0.body();
      evaluator_ContainsWholeOwnText0.matches(element0, document0);
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(structuralEvaluator_Not0);
      structuralEvaluator_ImmediatePreviousSibling0.evaluator = (Evaluator) evaluator_AttributeWithValueEnding0;
      structuralEvaluator_ImmediatePreviousSibling0.matches(document0, element0);
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-967), 28);
      evaluator_IsNthChild0.getPseudoClass();
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(28, 1);
      evaluator_IsNthLastChild0.calculatePosition(document0, element0);
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan((-967));
      evaluator_IndexLessThan0.matches(document0, element0);
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      evaluator_IsOnlyChild0.toString();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Evaluator.TagEndsWith evaluator_TagEndsWith0 = new Evaluator.TagEndsWith("org.jsoup.select.Evaluator$IsLastOfType");
      evaluator_TagEndsWith0.toString();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(118, (-2825));
      Element element0 = new Element("Adding include: [{}]");
      evaluator_IsNthLastChild0.calculatePosition(element0, element0);
      evaluator_IsNthLastChild0.calculatePosition(element0, element0);
      evaluator_IsNthLastChild0.getPseudoClass();
      MappedByteBufferPool mappedByteBufferPool0 = new MappedByteBufferPool(118, 2077);
      LeakTrackingByteBufferPool leakTrackingByteBufferPool0 = new LeakTrackingByteBufferPool(mappedByteBufferPool0);
      Class<Evaluator> class0 = Evaluator.class;
      Collection<Evaluator> collection0 = leakTrackingByteBufferPool0.getBeans(class0);
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(collection0);
      combiningEvaluator_Or0.toString();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Evaluator.IsNthLastChild evaluator_IsNthLastChild0 = new Evaluator.IsNthLastChild(0, 0);
      Evaluator.AllElements evaluator_AllElements0 = new Evaluator.AllElements();
      evaluator_AllElements0.toString();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Evaluator.IsFirstOfType evaluator_IsFirstOfType0 = new Evaluator.IsFirstOfType();
      HttpConnection httpConnection0 = new HttpConnection();
      // Undeclared exception!
      try { 
        httpConnection0.get();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URL not set. Make sure to call #url(...) before executing the request.
         //
         verifyException("org.jsoup.helper.HttpConnection$Base", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      Tag.valueOf("__*{`H]q;");
      Evaluator.Id evaluator_Id0 = new Evaluator.Id("0vv7lQ");
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(3, 3);
      evaluator_IsNthChild0.getPseudoClass();
      StructuralEvaluator.Parent structuralEvaluator_Parent0 = new StructuralEvaluator.Parent(evaluator_IsNthChild0);
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      structuralEvaluator_Parent0.matches(element0, element0);
      structuralEvaluator_Parent0.toString();
      Evaluator.ContainsWholeOwnText evaluator_ContainsWholeOwnText0 = new Evaluator.ContainsWholeOwnText("nth-child");
      evaluator_ContainsWholeOwnText0.toString();
      StructuralEvaluator.PreviousSibling structuralEvaluator_PreviousSibling0 = new StructuralEvaluator.PreviousSibling(evaluator_IsNthChild0);
      structuralEvaluator_PreviousSibling0.matches((Element) null, (Element) null);
      Pattern pattern0 = Pattern.compile("nth-child", 3);
      Evaluator.MatchesWholeOwnText evaluator_MatchesWholeOwnText0 = new Evaluator.MatchesWholeOwnText(pattern0);
      evaluator_MatchesWholeOwnText0.toString();
      // Undeclared exception!
      try { 
        evaluator_MatchesWholeOwnText0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$MatchesWholeOwnText", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Evaluator.IndexGreaterThan evaluator_IndexGreaterThan0 = new Evaluator.IndexGreaterThan(4947);
      evaluator_IndexGreaterThan0.toString();
      Pattern pattern0 = Pattern.compile(":gt(4947)");
      Evaluator.MatchesWholeOwnText evaluator_MatchesWholeOwnText0 = new Evaluator.MatchesWholeOwnText(pattern0);
      evaluator_MatchesWholeOwnText0.toString();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(0, 2655);
      evaluator_IsNthChild0.getPseudoClass();
      Evaluator.IsEmpty evaluator_IsEmpty0 = new Evaluator.IsEmpty();
      evaluator_IsEmpty0.toString();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("Jrn");
      Document document0 = Parser.parse("S&^XnK;EC8g)VE", "Jrn");
      TreeSet<DataNode> treeSet0 = new TreeSet<DataNode>();
      Element element0 = document0.prependChildren(treeSet0);
      Element element1 = element0.removeAttr("S&^XnK;EC8g)VE");
      Element element2 = element1.prependText("[%s~=%s]");
      element2.nextElementSibling();
      // Undeclared exception!
      try { 
        evaluator_AttributeStarting0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$AttributeStarting", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      Evaluator.AttributeWithValueNot evaluator_AttributeWithValueNot0 = new Evaluator.AttributeWithValueNot("type", "+= ");
      evaluator_AttributeWithValueNot0.value = "p0'";
      evaluator_AttributeWithValueNot0.toString();
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Evaluator.ContainsWholeOwnText evaluator_ContainsWholeOwnText0 = new Evaluator.ContainsWholeOwnText((String) null);
      evaluator_ContainsWholeOwnText0.toString();
      evaluator_ContainsWholeOwnText0.toString();
      evaluator_ContainsWholeOwnText0.toString();
      Element element0 = null;
      // Undeclared exception!
      try { 
        evaluator_ContainsWholeOwnText0.matches((Element) null, (Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.select.Evaluator$ContainsWholeOwnText", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[2];
      Evaluator.IndexEquals evaluator_IndexEquals0 = new Evaluator.IndexEquals(0);
      evaluatorArray0[0] = (Evaluator) evaluator_IndexEquals0;
      StructuralEvaluator.ImmediatePreviousSibling structuralEvaluator_ImmediatePreviousSibling0 = new StructuralEvaluator.ImmediatePreviousSibling(evaluator_IndexEquals0);
      HttpConnection httpConnection0 = new HttpConnection();
      // Undeclared exception!
      try { 
        httpConnection0.get();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URL not set. Make sure to call #url(...) before executing the request.
         //
         verifyException("org.jsoup.helper.HttpConnection$Base", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Evaluator.AttributeWithValueEnding evaluator_AttributeWithValueEnding0 = new Evaluator.AttributeWithValueEnding("M6", "M6");
      evaluator_AttributeWithValueEnding0.value = "M6";
      evaluator_AttributeWithValueEnding0.toString();
      Evaluator.IsRoot evaluator_IsRoot0 = new Evaluator.IsRoot();
      evaluator_IsRoot0.toString();
      Evaluator.IsOnlyChild evaluator_IsOnlyChild0 = new Evaluator.IsOnlyChild();
      evaluator_IsOnlyChild0.toString();
      SynchronousQueue<Evaluator> synchronousQueue0 = new SynchronousQueue<Evaluator>();
      // Undeclared exception!
      try { 
        synchronousQueue0.add(evaluator_IsRoot0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue full
         //
         verifyException("java.util.AbstractQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Evaluator.IsNthLastOfType evaluator_IsNthLastOfType0 = new Evaluator.IsNthLastOfType((-1207), (-163));
      Element element0 = new Element("+?|");
      Element element1 = element0.appendElement("<c.onFillable {}");
      Element element2 = element1.clearAttributes();
      Element element3 = element2.after((Node) element0);
      // Undeclared exception!
      element3.clone();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      String string0 = "";
      Evaluator.AttributeWithValueContaining evaluator_AttributeWithValueContaining0 = null;
      try {
        evaluator_AttributeWithValueContaining0 = new Evaluator.AttributeWithValueContaining("XHN]F322`i`dP!Jn0RV", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // String must not be empty
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      StructuralEvaluator.Root structuralEvaluator_Root0 = new StructuralEvaluator.Root();
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("Cookie value must not be null");
      Evaluator.ContainsData evaluator_ContainsData0 = new Evaluator.ContainsData("subconfig {} of {}");
      Tag tag0 = null;
      String string0 = "*\\2Ii~8`=v)B0,";
      Attributes attributes0 = new Attributes();
      attributes0.clone();
      Attributes attributes1 = attributes0.clone();
      Attributes attributes2 = attributes1.put("", "subconfig {} of {}");
      Element element0 = null;
      try {
        element0 = new Element((Tag) null, "Cookie value must not be null", attributes2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild(0, 409);
      Document document0 = Parser.parse("", "");
      document0.updateMetaCharsetElement(true);
      evaluator_IsNthChild0.calculatePosition(document0, document0);
      Evaluator.IsOnlyOfType evaluator_IsOnlyOfType0 = new Evaluator.IsOnlyOfType();
      evaluator_IsNthChild0.matches(document0, document0);
      Element element0 = document0.body();
      Element element1 = document0.selectFirst((Evaluator) evaluator_IsOnlyOfType0);
      evaluator_IsOnlyOfType0.matches(element0, element1);
      evaluator_IsNthChild0.calculatePosition(element0, document0);
      evaluator_IsOnlyOfType0.toString();
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting("time", ":only-of-type");
      evaluator_AttributeWithValueStarting0.toString();
      Evaluator.Tag evaluator_Tag0 = new Evaluator.Tag("time");
      evaluator_Tag0.matches(element0, element0);
      Evaluator.AttributeStarting evaluator_AttributeStarting0 = new Evaluator.AttributeStarting("q0LDJV5Zb@7");
      evaluator_AttributeStarting0.toString();
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      evaluator_IsLastChild0.matches(document0, element1);
      Evaluator.IndexLessThan evaluator_IndexLessThan0 = new Evaluator.IndexLessThan((-93));
      evaluator_IndexLessThan0.index = (-1499);
      evaluator_IndexLessThan0.matches(element1, element1);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      int int0 = 419;
      Pattern pattern0 = Pattern.compile("-*F}WQ\"$rJy$z", 419);
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      evaluator_Matches0.toString();
      Evaluator.ContainsWholeOwnText evaluator_ContainsWholeOwnText0 = new Evaluator.ContainsWholeOwnText(":matches(-*F}WQ\"$rJy$z)");
      evaluator_ContainsWholeOwnText0.toString();
      Evaluator.AttributeWithValueStarting evaluator_AttributeWithValueStarting0 = new Evaluator.AttributeWithValueStarting(":containsWholeOwnText(:matches(-*F}WQ\"$rJy$z))", ":containsWholeOwnText(:matches(-*F}WQ\"$rJy$z))");
      evaluator_AttributeWithValueStarting0.value = "WpiwO@X6*oY";
      HttpConnection httpConnection0 = new HttpConnection();
      // Undeclared exception!
      try { 
        httpConnection0.get();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URL not set. Make sure to call #url(...) before executing the request.
         //
         verifyException("org.jsoup.helper.HttpConnection$Base", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      Evaluator.IsNthChild evaluator_IsNthChild0 = new Evaluator.IsNthChild((-40), 214);
      ParseSettings parseSettings0 = ParseSettings.preserveCase;
      Tag tag0 = Tag.valueOf("{mdv{HSKTb1Ost^", parseSettings0);
      Attributes attributes0 = new Attributes();
      Element element0 = new Element(tag0, "{mdv{HSKTb1Ost^", attributes0);
      int int0 = evaluator_IsNthChild0.calculatePosition(element0, element0);
      assertEquals(1, int0);
  }
}
