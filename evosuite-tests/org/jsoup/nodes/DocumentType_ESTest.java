/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 22 19:04:21 GMT 2022
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStreamWriter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.DocumentType;
import org.jsoup.nodes.LeafNode;
import org.jsoup.nodes.Node;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DocumentType_ESTest extends DocumentType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("==ea", "default", "default");
      StringBuilder stringBuilder0 = new StringBuilder();
      stringBuilder0.append((Object) documentType0);
      assertEquals("<!DOCTYPE ==ea PUBLIC \"default\" \"default\">", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("", "hh1G", "");
      LeafNode leafNode0 = documentType0.doClone((Node) null);
      leafNode0.clearAttributes();
      boolean boolean0 = documentType0.hasSameValue(leafNode0);
      assertEquals("#doctype", leafNode0.nodeName());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("", "hh1G", "");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      Document.OutputSettings.Syntax document_OutputSettings_Syntax0 = Document.OutputSettings.Syntax.xml;
      document_OutputSettings0.syntax(document_OutputSettings_Syntax0);
      // Undeclared exception!
      try { 
        documentType0.outerHtmlHead((Appendable) null, (-1475), document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.DocumentType", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("", "", "");
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("SYSTEM", "Charset must not be null", "");
      documentType0.setPubSysKey("e3<~sKaH;:,$VNq-N&`");
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("sup", "sup", "method");
      documentType0.setPubSysKey((String) null);
      assertEquals("#doctype", documentType0.nodeName());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("1T/OvkQdxY_)", "\"", "");
      String string0 = documentType0.systemId();
      assertEquals("#doctype", documentType0.nodeName());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("==ea", "default", "default");
      String string0 = documentType0.publicId();
      assertEquals("#doctype", documentType0.nodeName());
      assertEquals("default", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("SYSTEM", "Charset must not be null", "");
      String string0 = documentType0.name();
      assertEquals("#doctype", documentType0.nodeName());
      assertEquals("SYSTEM", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DocumentType documentType0 = new DocumentType("publicId", "", "fv&wnvZ>d3wyA3_MKr");
      // Undeclared exception!
      try { 
        documentType0.html((OutputStreamWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.DocumentType", e);
      }
  }
}
