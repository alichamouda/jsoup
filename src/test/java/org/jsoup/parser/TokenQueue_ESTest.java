/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 22 20:12:01 GMT 2022
 */

package org.jsoup.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.parser.TokenQueue;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TokenQueue_ESTest extends TokenQueue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TokenQueue.unescape("`xbe.x>a_i");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("      \"         ");
      tokenQueue0.addFirst("'");
      tokenQueue0.chompBalanced(' ', '\\');
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[ oF;6FE?v9SY>p");
      tokenQueue0.advance();
      tokenQueue0.consume();
      tokenQueue0.advance();
      tokenQueue0.addFirst("[ oF;6FE?v9SY>p");
      tokenQueue0.consume("[ oF;6FE?v9SY>p");
      // Undeclared exception!
      try { 
        tokenQueue0.chompBalanced('F', '3');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Did not find balanced marker at ';6FE?v9SY>p'
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Did not find balanced marker at '");
      tokenQueue0.addFirst("Queue did not match expected sequence");
      tokenQueue0.chompTo("Did not find balanced marker at '");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TokenQueue.unescape("");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("            ");
      tokenQueue0.consumeToIgnoreCase("<*vP;8 Bpao");
      tokenQueue0.toString();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("            ");
      tokenQueue0.matchChomp("            ");
      tokenQueue0.remainder();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("       ");
      tokenQueue0.matches("(gNH|&r~bs+");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("25o=");
      tokenQueue0.consume();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[ oF;6FE?v9SY>p");
      tokenQueue0.chompToIgnoreCase("[ oF;6FE?v9SY>p");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("            ");
      tokenQueue0.consumeToIgnoreCase("<*vP;8 Bpao");
      tokenQueue0.chompTo("*=XwCd\romig8,");
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        TokenQueue.unescape((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("      \"         ");
      // Undeclared exception!
      try { 
        tokenQueue0.matchesAny((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("zM$g@,}S+*iIyy-@");
      // Undeclared exception!
      try { 
        tokenQueue0.matchesAny((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[p<hz$wVMgtm/Lat]");
      // Undeclared exception!
      try { 
        tokenQueue0.matchChomp((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("ij,c");
      // Undeclared exception!
      try { 
        tokenQueue0.consumeToIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("_");
      // Undeclared exception!
      try { 
        tokenQueue0.consumeToIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("        ");
      // Undeclared exception!
      try { 
        tokenQueue0.consumeToAny((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      // Undeclared exception!
      try { 
        tokenQueue0.consumeTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("org.jsoup.parser.TokenQueue");
      // Undeclared exception!
      try { 
        tokenQueue0.consume((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("oO");
      // Undeclared exception!
      try { 
        tokenQueue0.chompToIgnoreCase("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      // Undeclared exception!
      try { 
        tokenQueue0.chompToIgnoreCase((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("AQ_?ISRrJYk^!pJ'pL~");
      // Undeclared exception!
      try { 
        tokenQueue0.chompTo((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TokenQueue tokenQueue0 = null;
      try {
        tokenQueue0 = new TokenQueue((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Object must not be null
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("*%[^-@<");
      tokenQueue0.consumeToIgnoreCase("[ of;6");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("RgDoIp^f]KAMm[");
      tokenQueue0.consumeToIgnoreCase("b(0ZAiBBw(m>0");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("ij,c");
      tokenQueue0.remainder();
      tokenQueue0.matchesWord();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue(".P5F^&J\"5e|G.");
      tokenQueue0.matchesWord();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("mFv");
      tokenQueue0.matchesWord();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[ oF;6FE?v9SY>p");
      tokenQueue0.matchesWhitespace();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("     ");
      tokenQueue0.matchesWhitespace();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("UoI4<HZ.L)J[!TS!");
      tokenQueue0.matchChomp("8H");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("                   ");
      char[] charArray0 = new char[6];
      charArray0[0] = ' ';
      tokenQueue0.matchesAny(charArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("      \"         ");
      char[] charArray0 = new char[2];
      tokenQueue0.matchesAny(charArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      tokenQueue0.matchesAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("(jBl q");
      tokenQueue0.chompToIgnoreCase("R1*JmvlpC(dp6T");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "(jBl q";
      tokenQueue0.matchesAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("     ");
      tokenQueue0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue(".P5F^&J\"5e|G.");
      tokenQueue0.remainder();
      tokenQueue0.isEmpty();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue(".P5F^&J\"5e|G.");
      tokenQueue0.matches("");
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("            ");
      tokenQueue0.consumeToIgnoreCase("<*vP;8 Bpao");
      tokenQueue0.consumeCssIdentifier();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("vg_6W6mES");
      tokenQueue0.consumeElementSelector();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("z'98abUV^`R_SF6");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeTo("z'98abUV^`R_SF6");
      tokenQueue0.consumeElementSelector();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("^Q:#>PCh@F");
      tokenQueue0.chompBalanced('W', '^');
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("   X4  \"         ");
      // Undeclared exception!
      try { 
        tokenQueue0.chompBalanced(' ', '\\');
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Did not find balanced marker at '  X4  '
         //
         verifyException("org.jsoup.helper.Validate", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("{b\">(<1!IWY=DRU?,e");
      tokenQueue0.chompBalanced('2', '`');
      tokenQueue0.consumeCssIdentifier();
      tokenQueue0.chompBalanced(']', ']');
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("z'98abUV^`R_SF6");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.chompBalanced('f', 'f');
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("queue did not mata4yy2#nn`fh&3mquence");
      tokenQueue0.consume();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "queue did not mata4yy2#nn`fh&3mquence";
      stringArray0[1] = "queue did not mata4yy2#nn`fh&3mquence";
      stringArray0[2] = "queue did not mata4yy2#nn`fh&3mquence";
      tokenQueue0.consumeToAny(stringArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[ oF;6FE?v9SY>p");
      tokenQueue0.chompToIgnoreCase("?^4ium");
      // Undeclared exception!
      try { 
        tokenQueue0.consume();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("KN8ze$>'B|hz");
      tokenQueue0.consumeToIgnoreCase("KN8ze$>'B|hz");
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("AQ_?ISRrJYk^!pJ'pL~");
      tokenQueue0.consumeTo("AQ_?ISRrJYk^!pJ'pL~");
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("[ oF;6FE?v9SY>p");
      // Undeclared exception!
      try { 
        tokenQueue0.consume("?^4ium");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Queue did not match expected sequence
         //
         verifyException("org.jsoup.parser.TokenQueue", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("AQ_?ISRrJYk^!pJ'pL~");
      tokenQueue0.consume("AQ_?ISRrJYk^!pJ'pL~");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("z'98abUV^`R_SF6");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeTo("z'98abUV^`R_SF6");
      tokenQueue0.advance();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("z'98abUV^`R_SF6");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeTo("z'98abUV^`R_SF6");
      tokenQueue0.consumeWord();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      tokenQueue0.consumeWord();
      tokenQueue0.consumeWhitespace();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("AQ_?ISRrJYk^!pJ'pL~");
      tokenQueue0.consumeWhitespace();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("");
      tokenQueue0.matchesWhitespace();
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("AQ_?ISRrJYk^!pJ'pL~");
      tokenQueue0.consumeCssIdentifier();
      assertEquals("?ISRrJYk^!pJ'pL~", tokenQueue0.toString());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("z'98abUV^`R_SF6");
      tokenQueue0.consumeElementSelector();
      tokenQueue0.consumeTo("z'98abUV^`R_SF6");
      char[] charArray0 = new char[1];
      boolean boolean0 = tokenQueue0.matchesAny(charArray0);
      assertEquals("", tokenQueue0.toString());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("Queue did not match expected sequence");
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Queue did not match expected sequence";
      String string0 = tokenQueue0.consumeToAny(stringArray0);
      assertFalse(tokenQueue0.isEmpty());
      assertEquals("", string0);
      assertEquals("Queue did not match expected sequence", tokenQueue0.toString());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      TokenQueue tokenQueue0 = new TokenQueue("            ");
      String string0 = tokenQueue0.toString();
      assertEquals("            ", string0);
  }
}
