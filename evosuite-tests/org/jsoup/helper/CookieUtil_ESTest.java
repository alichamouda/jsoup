/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 22 19:09:39 GMT 2022
 */

package org.jsoup.helper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.helper.CookieUtil;
import org.jsoup.helper.HttpConnection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CookieUtil_ESTest extends CookieUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      httpConnection_Request0.cookie("Pg~)", "Pg~)");
      // Undeclared exception!
      try { 
        CookieUtil.applyCookiesToRequest(httpConnection_Request0, (HttpURLConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.helper.CookieUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      URL uRL0 = httpConnection_Request0.url;
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      CookieUtil.storeCookies(httpConnection_Request0, uRL0, hashMap0);
      assertEquals("http://undefined/", uRL0.toString());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CookieUtil cookieUtil0 = new CookieUtil();
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HttpConnection.Request httpConnection_Request0 = new HttpConnection.Request();
      CookieUtil.applyCookiesToRequest(httpConnection_Request0, (HttpURLConnection) null);
      assertNull(httpConnection_Request0.requestBody());
  }
}
