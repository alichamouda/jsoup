/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 22 20:26:30 GMT 2022
 */

package org.jsoup.nodes;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.PipedWriter;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.jsoup.nodes.CDataNode;
import org.jsoup.nodes.Document;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CDataNode_ESTest extends CDataNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("6!f5NU1s;vYmB");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, false);
      cDataNode0.outerHtmlHead(mockPrintStream0, 24, (Document.OutputSettings) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode((String) null);
      cDataNode0.text();
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("doctype-public");
      cDataNode0.text();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("doctype-public");
      cDataNode0.wrap("doctype-public");
      cDataNode0.clone();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("br\"V");
      PipedWriter pipedWriter0 = new PipedWriter();
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        cDataNode0.outerHtmlTail(pipedWriter0, 0, document_OutputSettings0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.IOException: Pipe not connected
         //
         verifyException("org.jsoup.nodes.CDataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("");
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(60);
      CharBuffer charBuffer0 = byteBuffer0.asCharBuffer();
      charBuffer0.compact();
      Document document0 = new Document("");
      Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
      // Undeclared exception!
      try { 
        cDataNode0.outerHtmlTail(charBuffer0, 60, document_OutputSettings0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("]]>");
      Document.OutputSettings document_OutputSettings0 = new Document.OutputSettings();
      // Undeclared exception!
      try { 
        cDataNode0.outerHtmlTail((Appendable) null, 189, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.CDataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("doctype-public");
      Document.OutputSettings document_OutputSettings0 = mock(Document.OutputSettings.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        cDataNode0.outerHtmlHead((Appendable) null, 0, document_OutputSettings0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jsoup.nodes.CDataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("'*5");
      cDataNode0.reparentChild(cDataNode0);
      // Undeclared exception!
      cDataNode0.clone();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("doctype-public");
      cDataNode0.nodeName();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("doctype-public");
      cDataNode0.clone();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("");
      cDataNode0.toString();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("");
      cDataNode0.text();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CDataNode cDataNode0 = new CDataNode("");
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(60);
      CharBuffer charBuffer0 = byteBuffer0.asCharBuffer();
      Document document0 = new Document("");
      Document.OutputSettings document_OutputSettings0 = document0.outputSettings();
      cDataNode0.outerHtmlTail(charBuffer0, 60, document_OutputSettings0);
  }
}
