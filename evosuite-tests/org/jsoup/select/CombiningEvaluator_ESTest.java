/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 22 19:33:46 GMT 2022
 */

package org.jsoup.select;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jsoup.nodes.Document;
import org.jsoup.select.CombiningEvaluator;
import org.jsoup.select.Evaluator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CombiningEvaluator_ESTest extends CombiningEvaluator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[1];
      Pattern pattern0 = Pattern.compile("");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      evaluatorArray0[0] = (Evaluator) evaluator_Matches0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      Document document0 = new Document("");
      boolean boolean0 = combiningEvaluator_Or0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[2];
      Pattern pattern0 = Pattern.compile("figure");
      Evaluator.MatchesWholeText evaluator_MatchesWholeText0 = new Evaluator.MatchesWholeText(pattern0);
      evaluatorArray0[0] = (Evaluator) evaluator_MatchesWholeText0;
      Evaluator.IsLastChild evaluator_IsLastChild0 = new Evaluator.IsLastChild();
      evaluatorArray0[1] = (Evaluator) evaluator_IsLastChild0;
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      Document document0 = new Document("figure");
      boolean boolean0 = combiningEvaluator_Or0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Evaluator.Attribute evaluator_Attribute0 = new Evaluator.Attribute(", ");
      Document document0 = new Document(", ");
      Evaluator[] evaluatorArray0 = new Evaluator[1];
      evaluatorArray0[0] = (Evaluator) evaluator_Attribute0;
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      boolean boolean0 = combiningEvaluator_And0.matches(document0, document0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[1];
      Pattern pattern0 = Pattern.compile("");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      evaluatorArray0[0] = (Evaluator) evaluator_Matches0;
      Document document0 = new Document("8PRT*GO!tn7XXS7qq");
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      boolean boolean0 = combiningEvaluator_And0.matches(document0, document0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[1];
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      Evaluator evaluator0 = combiningEvaluator_Or0.rightMostEvaluator();
      assertNull(evaluator0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[0];
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      Evaluator evaluator0 = combiningEvaluator_Or0.rightMostEvaluator();
      assertNull(evaluator0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[1];
      Pattern pattern0 = Pattern.compile("");
      Evaluator.Matches evaluator_Matches0 = new Evaluator.Matches(pattern0);
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      combiningEvaluator_Or0.add(evaluator_Matches0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[0];
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      String string0 = combiningEvaluator_Or0.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[1];
      CombiningEvaluator.And combiningEvaluator_And0 = new CombiningEvaluator.And(evaluatorArray0);
      // Undeclared exception!
      try { 
        combiningEvaluator_And0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Evaluator[] evaluatorArray0 = new Evaluator[0];
      CombiningEvaluator.Or combiningEvaluator_Or0 = new CombiningEvaluator.Or(evaluatorArray0);
      // Undeclared exception!
      try { 
        combiningEvaluator_Or0.replaceRightMostEvaluator((Evaluator) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
